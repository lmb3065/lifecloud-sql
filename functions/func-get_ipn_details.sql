/* 
    2015-03-22 dbrown: Created (ported from MS-SQL)
    2015-03-31 dbrown: Add decryption
 */

create or replace function get_ipn_details
(
    _ipnuid int
)
returns table
(
    UID             integer,
    IPNReceived     timestamp,
    business        text,
    receiver_email  text,    
    item_name       text,
    item_number     text,
    quantity        int,
    invoice         text,
    custom          text,
    memo            text,
    tax             money,
    payment_status  text,
    pending_reason  text,
    reason_code     text,
    payment_date    text,
    txn_id          text,
    txn_type        text,
    payment_type    text,
    mc_gross        money,
    mc_fee          money,
    mc_currency     char(3),
    settle_amount   money,
    settle_currency varchar(50),
    exchange_rate   double precision,
    payment_gross   money,
    payment_fee     money,
    subscr_date     varchar(50),
    subscr_effective varchar(50),
    period1         varchar(50),
    period2         varchar(50),
    period3         varchar(50),
    amount1         money,
    amount2         money,
    amount3         money,
    mc_amount1      money,
    mc_amount2      money,
    mc_amount3      money,
    recurring       char(1),
    reattempt       char(1),
    retry_at        varchar(50),
    recur_times     int,
    username        text,
    password        text,
    subscr_id       text,
    first_name      text,
    last_name       text,
    address_name    text,
    address_street  text,
    address_city    text,
    address_state   text,
    address_zip     text,
    address_country text,
    address_status  text,
    payer_email     text,
    payer_id        text,
    payer_status    text,
    notify_version  varchar(8),
    verify_sign     varchar(200),
    post_status     varchar(50),
    post_response   varchar(50),
    HAStatus        varchar(8)
) as $$

begin

    if _ipnuid is null then return; end if;

    return query
    select 
        ipn.UID,
        ipn.IPNReceived,
        fdecrypt(ipn.x_business),
        fdecrypt(ipn.x_receiver_email),
        fdecrypt(ipn.x_item_name),
        fdecrypt(ipn.x_item_number),
        ipn.quantity,
        fdecrypt(ipn.x_invoice),
        fdecrypt(ipn.x_custom),
        fdecrypt(ipn.x_memo),
        ipn.tax,
        fdecrypt(ipn.x_payment_status),
        fdecrypt(ipn.x_pending_reason),
        fdecrypt(ipn.x_reason_code),
        fdecrypt(ipn.x_payment_date),
        fdecrypt(ipn.x_txn_id),
        fdecrypt(ipn.x_txn_type),
        fdecrypt(ipn.x_payment_type),
        ipn.mc_gross,
        ipn.mc_fee,
        ipn.mc_currency,
        ipn.settle_amount,
        ipn.settle_currency,
        ipn.exchange_rate,  
        ipn.payment_gross,  
        ipn.payment_fee,    
        ipn.subscr_date,    
        ipn.subscr_effective,
        ipn.period1,         
        ipn.period2,         
        ipn.period3,         
        ipn.amount1,         
        ipn.amount2,         
        ipn.amount3,         
        ipn.mc_amount1,      
        ipn.mc_amount2,      
        ipn.mc_amount3,      
        ipn.recurring,       
        ipn.reattempt,       
        ipn.retry_at,        
        ipn.recur_times,     
        fdecrypt(ipn.x_username),
        fdecrypt(ipn.x_password),
        fdecrypt(ipn.x_subscr_id),
        fdecrypt(ipn.x_first_name),
        fdecrypt(ipn.x_last_name),
        fdecrypt(ipn.x_address_name),
        fdecrypt(ipn.x_address_street),
        fdecrypt(ipn.x_address_city),
        fdecrypt(ipn.x_address_state),
        fdecrypt(ipn.x_address_zip),
        fdecrypt(ipn.x_address_country),
        fdecrypt(ipn.x_address_status),
        fdecrypt(ipn.x_payer_email),
        fdecrypt(ipn.x_payer_id),
        fdecrypt(ipn.x_payer_status),
        ipn.notify_version,  
        ipn.verify_sign,    
        ipn.post_status,  
        ipn.post_response, 
        ipn.HAStatus       
    from ipn where ipn.uid = _ipnuid;

end;
$$ language plpgsql;

